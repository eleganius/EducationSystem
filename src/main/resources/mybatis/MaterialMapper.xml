<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.app.dao.MaterialDao">

	<resultMap id="material" type="com.example.app.domain.Material">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="publisher" column="publisher" />
		<result property="note" column="note" />
		<result property="created" column="created" />
		<result property="status" column="status" />
		<association property="materialType" javaType="com.example.app.domain.MaterialType">
			<id property="id" column="material_type_id" />
			<result property="name" column="material_type_name" />
		</association>
	</resultMap>

	<select id="selectAll" resultMap="material">
		SELECT
			materials.id, materials.name, materials.publisher,
			materials.note, materials.created, materials.status,
			materials.material_type_id, material_types.name AS material_type_name
		FROM materials
		JOIN material_types
		ON materials.material_type_id = material_types.id
		WHERE materials.status = 'ACT'
	</select>

	<select id="selectById" parameterType="int" resultMap="material">
		SELECT
			materials.id, materials.name, materials.publisher,
			materials.note, materials.created, materials.status,
			materials.material_type_id, material_types.name AS material_type_name
		FROM materials
		JOIN material_types
		ON materials.material_type_id = material_types.id
		WHERE materials.id = #{id}
	</select>

	<update id="setDeleteById" parameterType="int">
		UPDATE materials SET status = 'DEL'
		WHERE id = #{id}
	</update>

	<insert id="insert" parameterType="com.example.app.domain.Material" useGeneratedKeys="true">
		INSERT INTO materials (name, publisher, note, material_type_id, created)
		VALUES (#{name}, #{publisher}, #{note}, #{materialType.id}, NOW())
	</insert>

	<update id="update" parameterType="com.example.app.domain.Material">
		UPDATE materials
		SET name = #{name}, publisher = #{publisher}, note = #{note},
			material_type_id = #{materialType.id}
		WHERE id = #{id}
	</update>

	<select id="selectLimited" resultMap="material">
		SELECT
			materials.id, materials.name, materials.publisher,
			materials.note, materials.created, materials.status,
			materials.material_type_id, material_types.name AS material_type_name
		FROM materials
		JOIN material_types
		ON materials.material_type_id = material_types.id
		WHERE materials.status = 'ACT'
		LIMIT #{offset}, #{num}
	</select>

	<select id="countActive" resultType="long">
		SELECT COUNT(*) FROM materials
		WHERE status = 'ACT'
	</select>

</mapper>
